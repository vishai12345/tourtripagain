<?php

namespace App\Repo;

use App\Repo\BaseRepo;
use App\Destination;
use App\DestinationType;
use App\Medium;

Class SearchRepo extends BaseRepo {

    public function getResults($data) {

        $mediumArry = [];
        $mediumType = new Medium();
        $mediumTypes = $this->getAll($mediumType);

        foreach ($mediumTypes as $value) {
            if (isset($data[$value->name])) {
                $mediumArry [$data[$value->name]] = 1;
            } else {
                $mediumArry [$value->id] = 0;
            }
        }
        $destArray = [];
        $destinationType = new DestinationType();
        $destinationTypes = $this->getAll($destinationType);

        foreach ($destinationTypes as $value) {
            if (isset($data[$value->name])) {
                $destArray [$data[$value->name]] = 1;
            }
        }
        // dd(json_encode($destArray));

        $destination = new Destination();

        $results = $destination->Where('category_id', $data['category_id'])
                ->Where('status', 1)
                ->get();
        $finalResult = [];
        foreach ($results as $result) {
            $destArrayDB = json_decode($result->destination_type, true);

            $matchedArray = array_intersect_assoc($destArrayDB, $destArray);

            if ((sizeof($matchedArray) > 0) && (sizeof($matchedArray) == sizeof($destArray))) {
                $finalResult[] = $result;
            }
        }
        return $finalResult;
    }

}
